@model MarketX.ViewModels.PropertiesWithInputs

@if (Model.Properties.Any())
{
    <div class="font-weight-bold pl-3">Tulajdonságok:</div>
}
@for(var i=0; i < Model.Properties.Count; i++)
{
    Model.PropertyInputs.Add(new MarketX.ViewModels.PropertyInputField());
<div class="pl-5">
    <label class="font-weight-bold" for="@Model.Properties[i].Name">@Model.Properties[i].Name:</label>
    <input asp-for="@Model.PropertyInputs[i].Name" type="hidden" value="@Model.Properties[i].Name" />
    @switch (Model.Properties[i].ValueType)
    {
        case PropertyValueType.Bool:
            <input asp-for="@Model.PropertyInputs[i].Value" id="@Model.Properties[i].Name" type="checkbox" />
            break;

        case PropertyValueType.Integer:
            <input asp-for="@Model.PropertyInputs[i].Value" id="@Model.Properties[i].Name" type="number" />
            break;

        case PropertyValueType.String:
            <input asp-for="@Model.PropertyInputs[i].Value" id="@Model.Properties[i].Name" type="text" />
            break;

        case PropertyValueType.SelectableFromList:
            <select asp-for="@Model.PropertyInputs[i].Value" id="@Model.Properties[i].Name">
                <option value="" selected disabled hidden>Válassz</option>
                @foreach (var val in Model.Properties[i].PropertyValues)
                {
                    <option>@val.Value</option>
                }
            </select>
            break;
    }
</div>
}