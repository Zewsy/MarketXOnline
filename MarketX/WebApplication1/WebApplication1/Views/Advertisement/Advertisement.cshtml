@model Advertisement

@section Styles{
    <link rel="stylesheet" href="@Url.Content("~/css/BasicAdvertisementCard.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/Advertisement.css")" />
}


<div class="container">
    <div class="row">
        <h1 class="col-12">@Model.Title</h1>
    </div>
    <div class="row">
        <div class="col-4">
            <div id="carousel" class="row carousel slide" data-ride="carousel">
                <div class="carousel-inner">
                    <div class="carousel-item active">
                        <img class="d-block w-100" src="@Url.Content(Model.AdvertisementPhotos.First().ImagePath)" />
                    </div>
                    @for (int i = 1; i < Model.AdvertisementPhotos.Count; i++)
                    {
                        <div class="carousel-item">
                            <img class="d-block w-100" src="@Url.Content(Model.AdvertisementPhotos.ElementAt(i).ImagePath)" />
                        </div>
                    }
                </div>
                <a class="carousel-control-prev" href="#carousel" role="button" data-slide="prev">
                    <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                    <span class="sr-only">Előző</span>
                </a>
                <a class="carousel-control-next" href="#carousel" role="button" data-slide="next">
                    <span class="carousel-control-next-icon" aria-hidden="true"></span>
                    <span class="sr-only">Következő</span>
                </a>
                <ol class="carousel-indicators">
                    <li data-target="#carousel" class="active" data-slide-to="0">
                        <img class="d-block w-100 img-fluid" src="@Url.Content(Model.AdvertisementPhotos.ElementAt(0).ImagePath)" />
                    </li>
                    @for (int i = 1; i < Model.AdvertisementPhotos.Count; i++)
                    {
                        <li data-target="#carousel" data-slide-to="@i">
                            <img class="d-block w-100 img-fluid" src="@Url.Content(Model.AdvertisementPhotos.ElementAt(i).ImagePath)" />
                        </li>
                    }
                </ol>
            </div>
        </div>
        <div class="col-8">
            <div class="row">
                <div class="font-weight-bold col-4">
                    <div class="pb-2">@Html.DisplayNameFor(model => model.Price):</div>
                    <div class="pb-2">Jellege:</div>
                    <div class="pb-2">@Html.DisplayNameFor(model => model.CreatedDate):</div>
                    <div class="pb-2">@if (Model.Status != Status.Closed)@Html.DisplayNameFor(model => model.Condition):</div>
                    @foreach (var property in Model.AdvertisementProperties)
                    {
                        @if (property.Property.isImportant)
                        {
                            <div class="pb-2">@property.Property.Name:</div>
                        }
                    }
                    <div class="pb-2">Hely:</div>
                </div>
                <div class="col-8">
                    <div class="pb-2">
                        @if (Model.Price != null)
                        {
                            @Html.DisplayFor(model => model.Price)
                        }
                        else
                        {
                            <div>Nincs megadva</div>
                        }
                    </div>
                    <div class="pb-2">@if (Model.Status != Status.Closed)@(Model.Customer == null ? "Kínál" : "Keres")</div>
                    <div class="pb-2">@Html.DisplayFor(model => model.CreatedDate)</div>
                    <div class="pb-2">@(Model.Condition == Condition.New ? "Új" : "Használt")</div>
                    @foreach (var property in Model.AdvertisementProperties)
                    {
                        @if (property.Property.isImportant)
                        {
                            <div class="pb-2">@property.ValueAsString</div>
                        }
                    }
                    <div class="pb-2">@Html.DisplayFor(model => model.City.County.Name), @Html.DisplayFor(model => model.City.Name)</div>
                </div>
            </div>
        </div>
    </div>
    <div class="row mb-4 mt-5 pt-5">
        <div class="col-12">
            <h2>@Html.DisplayNameFor(model => model.Description)</h2>
            @Html.DisplayFor(model => model.Description)
        </div>
    </div>
    <div class="row pb-5">
        <div class="col-4">
            <div>
                <h2>További tulajdonságok</h2>
                @foreach (var property in Model.AdvertisementProperties)
                {
                    if (!property.Property.isImportant)
                    {
                        <div class="row pb-2">
                            <span class="font-weight-bold col-6">@property.Property.Name:</span>
                            <span class="col-6">@property.ValueAsString</span>
                        </div>
                    }
                }
            </div>
        </div>
        <div class="col-8">
            @if (Model.Seller != null)
            {
                <h2>Eladó</h2>
                @await Component.InvokeAsync("UserSection", new { user = Model.Seller })
            }
            else
            {
                <h2>Vevő</h2>
                @await Component.InvokeAsync("UserSection", new { user = Model.Customer })
            }

        </div>
    </div>
    <div class="row">
        <div class="col-4">
            <button type="button" class="btn btn-primary btn-block">Megjelölés hibás hirdetésként</button>
            <button type="button" class="btn btn-primary btn-block">Hirdetés mentése</button>
            <button type="button" class="btn btn-primary btn-block">Megosztás Facebookon</button>
        </div>
        <div class="col-6">
            <span class="font-italic pr-4">Hirdetés ajánlása:</span>
            <button type="button" class="btn btn-secondary">Email</button>
            <button type="button" class="btn btn-secondary">Üzenet az oldalon</button>
        </div>
    </div>
    <h1 class="mt-3">Hasonló hirdetések</h1>
    <div>
        @await Component.InvokeAsync("AdvertisementList", new
        {
            advertisementTypeToShow = MarketX.Views.Home.ViewComponents.AdvertisementType.Similar,
            numberOfAdvertisementsToShow = 8,
            similarAdvertisement = Model
        })
    </div>

    @section Scripts{ 
        <script src="~/js/advertisement.js"></script>
    }
</div>