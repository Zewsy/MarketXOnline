@using MarketX.DAL.Entities

@model MarketX.BLL.DTOs.Advertisement

@section Styles{
    <link rel="stylesheet" href="@Url.Content("~/css/AdvertisementCard.css")" />
    <link rel="stylesheet" href="@Url.Content("~/css/Advertisement.css")" />
}

@await Component.InvokeAsync("Search", true)

<div class="pt-2">
    <div class="row">
        <h1 class="col-12">@Model.Title</h1>
    </div>
    <div class="row">
        <div class="col-4 bg-light mr-5 ml-2">
            <div id="carousel" class="carousel slide" data-ride="carousel">
                <div class="carousel-inner py-2">
                    <div class="carousel-item active">
                        <div class="d-flex justify-content-center h-100">
                            @if (Model.AdvertisementImagePaths.Any())
                            {
                                <img class="d-block" src="@Url.Content(Model.AdvertisementImagePaths.First())" />
                            }
                            else
                            {
                                <img class="d-block" src="~/images/image-placeholder.jpg" />
                            }
                        </div>
                    </div>
                    @for (int i = 1; i < Model.AdvertisementImagePaths.Count; i++)
                    {
                        <div class="carousel-item">
                            <div class="d-flex justify-content-center h-100">
                                <img class="d-block" src="@Url.Content(Model.AdvertisementImagePaths.ElementAt(i))" />
                            </div>
                        </div>
                    }
                </div>
                @if (Model.AdvertisementImagePaths.Count >= 2)
                {
                    <ol class="carousel-indicators list-unstyled">
                        <li data-target="#carousel" class="h-auto" data-slide-to="0">
                            <img class="d-block img-fluid" src="@Url.Content(Model.AdvertisementImagePaths.ElementAt(0))" />
                        </li>
                        @for (int i = 1; i < Model.AdvertisementImagePaths.Count; i++)
                        {
                            <li class="h-auto" data-target="#carousel" data-slide-to="@i">
                                <img class="d-block img-fluid" src="@Url.Content(Model.AdvertisementImagePaths.ElementAt(i))" />
                            </li>
                        }
                    </ol>
                    <a class="carousel-control-prev h-auto pr-4" href="#carousel" role="button" data-slide="prev">
                        <span class="carousel-control-prev-icon" aria-hidden="true"></span>
                        <span class="sr-only">Előző</span>
                    </a>
                    <a class="carousel-control-next h-auto pl-4" href="#carousel" role="button" data-slide="next">
                        <span class="carousel-control-next-icon" aria-hidden="true"></span>
                        <span class="sr-only">Következő</span>
                    </a>
                }
            </div>
        </div>
        <div class="col-7 bg-light pb-3">
            <div class="row pt-2">
                <div class="font-weight-bold col-4">
                    <div class="pb-2">@Html.DisplayNameFor(model => model.Price):</div>
                    <div class="pb-2">Jellege:</div>
                    <div class="pb-2">@Html.DisplayNameFor(model => model.CreatedDate):</div>
                    <div class="pb-2">@if (Model.Status != Status.Closed)@Html.DisplayNameFor(model => model.Condition):</div>
                    @foreach (var property in Model.AdvertisementProperties)
                    {
                        @if (property.Property.IsImportant)
                        {
                            <div class="pb-2">@property.Property.Name:</div>
                        }
                    }
                    <div class="pb-2">Hely:</div>
                    <button type="button" class="btn btn-primary btn-block mt-5">Hirdetés mentése</button>
                </div>
                <div class="col-8">
                    <div class="pb-2">
                        @if (Model.Price != null)
                        {
                            @Html.DisplayFor(model => model.Price)
                        }
                        else
                        {
                            <div>Nincs megadva</div>
                        }
                    </div>
                    <div class="pb-2">@if (Model.Status != Status.Closed)@(Model.Customer == null ? "Kínál" : "Keres")</div>
                        <div class="pb-2">@Html.DisplayFor(model => model.CreatedDate)</div>
                        <div class="pb-2">@(Model.Condition == Condition.New ? "Új" : "Használt")</div>
                        @foreach (var property in Model.AdvertisementProperties)
                        {
                            @if (property.Property.IsImportant)
                            {
                                @if (property.Value == "true")
                                {
                                    <div class="pb-2">van</div>
                                }
                                else if (property.Value == "false")
                                {
                                    <div class="pb-2">nincs</div>
                                }
                                else
                                {
                                    <div class="pb-2">@property.Value</div>
                                }

                            }
                        }
                        <div class="pb-2">@Html.DisplayFor(model => model.City.County.Name), @Html.DisplayFor(model => model.City.Name)</div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row mb-4 mt-5 py-2 bg-light">
            <div class="col-12">
                <h2>@Html.DisplayNameFor(model => model.Description)</h2>
                @Html.DisplayFor(model => model.Description)
            </div>
        </div>
        <div class="row pb-5">
            @if (Model.AdvertisementProperties.Any(p => !p.Property.IsImportant))
            {
                <div class="col-4 ml-0 pl-0">
                    <div class="bg-light p-2 ml-0">
                        <h2 class="pl-2">További tulajdonságok</h2>
                        @foreach (var property in Model.AdvertisementProperties)
                        {
                            if (!property.Property.IsImportant)
                            {
                                <div class="row pb-2 ml-0 pl-2">
                                    <span class="font-weight-bold col-6 pl-0">@property.Property.Name:</span>
                                    @if (property.Value == "true")
                                    {
                                        <span class="col-6">van</span>
                                    }
                                    else if (property.Value == "false")
                                    {
                                        <span class="col-6">nincs</span>
                                    }
                                    else
                                    {
                                        <span class="col-6">@property.Value</span>
                                    }
                                </div>
                            }
                        }
                    </div>
                </div>
            }
            <div class="col-8 bg-light pb-2">
                @if (Model.Seller != null)
                {
                    <h2>Eladó</h2>
                    @await Component.InvokeAsync("UserSection", new { user = Model.Seller })
                }
                else
                {
                    <h2>Vevő</h2>
                    @await Component.InvokeAsync("UserSection", new { user = Model.Customer })
                }

            </div>
        </div>
        <div class="row">
            <div class="col-4">
                <button type="button" class="btn btn-primary btn-block">Megjelölés hibás hirdetésként</button>
                <button type="button" class="btn btn-primary btn-block">Megosztás Facebookon</button>
            </div>
            <div class="col-6">
                <span class="font-italic pr-4">Hirdetés ajánlása:</span>
                <button type="button" class="btn btn-secondary">Email</button>
                <button type="button" class="btn btn-secondary">Üzenet az oldalon</button>
            </div>
        </div>
        <div>
            <h1 class="mt-3 pb-2">Hasonló hirdetések</h1>
            @await Component.InvokeAsync("AdvertisementList", new
            {
                advertisementTypeToShow = MarketX.Views.Home.ViewComponents.AdvertisementType.Similar,
                numberOfAdvertisementsToShow = 8,
                similarAdvertisement = Model
            })
        </div>

        @section Scripts{
            <script src="~/js/advertisement.js"></script>
        }
    </div>